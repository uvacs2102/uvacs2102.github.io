<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on cs2102: Discrete Math</title>
    <link>https://uvacs2102.github.io/post/</link>
    <description>Recent content in Posts on cs2102: Discrete Math</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 24 Sep 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://uvacs2102.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Self-Inverting Relations Challenge Solved!</title>
      <link>https://uvacs2102.github.io/challenge4/</link>
      <pubDate>Sat, 24 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/challenge4/</guid>
      <description>&lt;p&gt;Challenge 4 has been solved by Henry Spece!&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightg&#34;&gt;
&lt;strong&gt;Challenge 4.&lt;/strong&gt; (From &lt;a href=&#34;https://uvacs2102.github.io/class9&#34;&gt;Class 9&lt;/a&gt;) How many self-inverting relations, &lt;em&gt;R&lt;/em&gt;: &lt;em&gt;N&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; &amp;rarr; &lt;em&gt;N&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt;, are there?  (Where &lt;em&gt;N&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; is the set of all non-negative integers less than &lt;em&gt;k&lt;/em&gt;, and a relation is self-inverting if &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;R&lt;/em&gt;&lt;sup&gt;-1&lt;/sup&gt;.)
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Henry&amp;rsquo;s answer is below:&lt;/p&gt;

&lt;p&gt;&lt;blockquote&gt;
2&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;*(&lt;em&gt;n&lt;/em&gt;+1)/2&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;For each element in the domain, the number of &amp;ldquo;connection&amp;rdquo; possibilities
for that element to each element of the codomain (given that it can
either be related or not related to a codomain element) is 2&lt;em&gt;n&lt;/em&gt;, where
&lt;em&gt;n&lt;/em&gt; is the number of codomain elements.&lt;/p&gt;

&lt;p&gt;This includes the possibility of the element connecting to itself,
because there are two possibilities involving self connection, and
2&lt;sup&gt;(&lt;em&gt;n&lt;/em&gt;-1)&lt;/sup&gt; possibilities for connection to non-identical
elements.  The product of these two results in
2*2&lt;sup&gt;(&lt;em&gt;n&lt;/em&gt;-1)&lt;/sup&gt; = 2&lt;sup&gt;n&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;For each following element in the domain, the relationship with all
previous elements which have been assigned relationships is fixed.  For
example, if element &lt;em&gt;a&lt;/em&gt; in the domain is related to element
&lt;em&gt;b&lt;/em&gt; in the codomain, then element &lt;em&gt;b&lt;/em&gt; in the domain must
be related to element &lt;em&gt;a&lt;/em&gt; in the codomain.  This applies equally
if element &lt;em&gt;a&lt;/em&gt; in the domain is not related to element &lt;em&gt;b&lt;/em&gt;
in the codomain, because then element &lt;em&gt;b&lt;/em&gt; in the domain must also
not be related to element &lt;em&gt;a&lt;/em&gt; in the codomain, or the relation
would not be self-inverting.&lt;/p&gt;

&lt;p&gt;All other relationships between our second element and elements of the
codomain are still free to change, though, leaving
2&lt;sup&gt;&lt;em&gt;n&lt;/em&gt;-1&lt;/sup&gt; combinations for the second element considered.&lt;/p&gt;

&lt;p&gt;This pattern continues &lt;em&gt;n&lt;/em&gt; times in total, and by multiplying
these possibilities, we get&lt;/p&gt;

&lt;p&gt;2&lt;sup&gt;n&lt;/sup&gt; * 2&lt;sup&gt;n-1&lt;/sup&gt; * 2 &lt;sup&gt;n-2&lt;/sup&gt; &amp;hellip; * 2&lt;sup&gt;1&lt;/sup&gt;&lt;/p&gt;

&lt;p&gt;Which is the same as 2&lt;sup&gt;&lt;em&gt;n&lt;/em&gt; + (&lt;em&gt;n&lt;/em&gt;-1) + (&lt;em&gt;n&lt;/em&gt;-2)
+ &amp;hellip; + 2 + 1&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;By reversing the addition sequence we get that the exponent of 2 is the
sum of all numbers from 1 to &lt;em&gt;n&lt;/em&gt;, which is equal to
&lt;em&gt;n&lt;/em&gt;*(&lt;em&gt;n&lt;/em&gt;+1)/2.&lt;/p&gt;

&lt;p&gt;Hence, the number of self-inverting relations for a set of size
&lt;em&gt;n&lt;/em&gt; must be 2&lt;sup&gt;(&lt;em&gt;n&lt;/em&gt;*(&lt;em&gt;n&lt;/em&gt;+1)/2)&lt;/sup&gt;.
   &lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;Congratulations to Henry Spece for solving the challenge!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problem Set 5</title>
      <link>https://uvacs2102.github.io/ps5announce/</link>
      <pubDate>Fri, 23 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/ps5announce/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Problem Set 5&lt;/strong&gt; is &lt;a href=&#34;https://uvacs2102.github.io/docs/ps5.pdf&#34;&gt;now posted&lt;/a&gt;, and is due on &lt;strong&gt;Friday, 30
  September at 6:29pm&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 10: In(tro)duction</title>
      <link>https://uvacs2102.github.io/class10/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/class10/</guid>
      <description>

&lt;h3 id=&#34;schedule&#34;&gt;Schedule&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://uvacs2102.github.io/ps/ps4&#34;&gt;&lt;strong&gt;Problem Set 4&lt;/strong&gt;&lt;/a&gt; is due &lt;strong&gt;Friday at 6:29pm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Next week, you should finish reading MCS Chapter 5 (Induction).  Another
presentation of Induction is &lt;a href=&#34;http://www.people.vcu.edu/~rhammack/BookOfProof/Induction.pdf&#34;&gt;Chapter 10 from the Book of
Proof&lt;/a&gt;
(you are not required to read this, but it is encouraged and has lots
more examples of proofs by induction).&lt;/p&gt;

&lt;p&gt;Exam 1 will be in class on Thursday, 6 October.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;notpdf&#34;&gt;
   &lt;center&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;06f4be58f3984fa2b5e65cfaa9525667&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
   &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightm&#34;&gt;
   &lt;a href=&#34;https://uvacs2102.github.io/docs/class10.pdf&#34;&gt;See PDF Version for &lt;b&gt;Notes and Questions&lt;/b&gt;&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.people.vcu.edu/~rhammack/BookOfProof/Induction.pdf&#34;&gt;Chapter 10: Induction from the Book of Proof&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Onion, &lt;a href=&#34;http://www.theonion.com/article/bush-earmarks-15-billion-gold-stars-for-education-392&#34;&gt;Bush Earmarks 1.5 Billion Gold Stars For Education&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;!--endpdf--&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;latex&#34;&gt;&lt;/p&gt;

&lt;h1 id=&#34;power-sets-continued-from-class-9-class9&#34;&gt;Power Sets (continued from &lt;a href=&#34;https://uvacs2102.github.io/class9&#34;&gt;Class 9&lt;/a&gt;)&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;power set&lt;/strong&gt; of $A$ ($\textrm{pow}(A)$) is the set of all subsets of
$A$: $B \in \textrm{pow}(A) \iff B \subseteq A$.&lt;/p&gt;

&lt;p&gt;Prove that the size of the power set of a set $S$ with $|S| = N$ is
$2^N$.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Proof using Well-Ordering Principle&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The goal is to prove for all sets $A$: $|\textrm{pow}(A)| = 2^{|A|}$.&lt;/p&gt;

&lt;p&gt;Recall (from &lt;a href=&#34;https://uvacs2102.github.io/class9&#34;&gt;Class 9&lt;/a&gt;) that $N_k = { n | n \in \mathbb{N} \wedge n &amp;lt; k } $ and $|\mathbb{N}_n| = n$.&lt;/p&gt;

&lt;p&gt;Because of the bijection between any set $A$ where $|A| = n$ to $\mathbb{N}_n$, we can prove the general property by  showing $\forall n \in \mathbb{N} \ldotp P(n)$ where $P(n) ::= |\textrm{pow}(\mathbb{N}_n)| = 2^n$.&lt;/p&gt;

&lt;p&gt;We follow the structure of every well-ordering proof:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Define the set of counterexamples:
$$
C ::= { n \in \mathbb{N} | \quad |\textrm{pow}(\mathbb{N}_n)| \neq 2^n }
$$&lt;/li&gt;
&lt;li&gt;Assume $C$ is $\fillin\fillin\fillin$.&lt;/li&gt;
&lt;li&gt;By the well-ordering principle, there must be some smallest element, $m \in C$.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Reach a contradiction: we show that $\fillin\fillin\fillin$ holds.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Since $m$ is the smallest element of $C$, $P(n)$ must hold for all $\fillin\fillin\fillin$.&lt;/li&gt;
&lt;li&gt;We know $P(0)$ is true since $\mathbb{N}_0 = \emptyset$ and $\textrm{pow}(\emptyset) = \fillin\fillin\fillin\fillin$.  We have, $|\textrm{pow}(\mathbb{N}_0)| =  \fillin\fillin = \fillin\fillin$, satisfying $P(0)$.&lt;/li&gt;
&lt;li&gt;Thus, $m &amp;gt; 0$.  This means $m - 1 \in \mathbb{N}$.&lt;/li&gt;
&lt;li&gt;So, we know $P(\fillin\fillin)$ holds.&lt;/li&gt;
&lt;li&gt;Thus, we can construct $\textrm{pow}(\mathbb{N}&lt;em&gt;{m})$ by keeping all the elements of $\textrm{pow}(\mathbb{N}&lt;/em&gt;{m - 1})$ and adding each of those elements with $(m-1)$ inserts.  More formally,
$$
\textrm{pow}(\mathbb{N}&lt;em&gt;m) = \textrm{pow}(\mathbb{N}&lt;/em&gt;{m - 1}) \quad \cup \bigcup&lt;em&gt;{S \in \textrm{pow}(\mathbb{N}&lt;/em&gt;{m - 1})} (S \cup \fillin\fillin\fillin)
$$
The size of this set is $2 |\textrm{pow}(\mathbb{N}&lt;em&gt;{m - 1})|$ since it contains two sets for each set in $\textrm{pow}(\mathbb{N}&lt;/em&gt;{m - 1})$ (the original one, and the one with $m-1$ added, which we know is a new set since $m - 1 \notin \mathbb{N}_{m - 1}$).&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Since $P(m-1)$, we know $|\textrm{pow}(\mathbb{N}&lt;em&gt;{m - 1})| = \fillin\fillin\fillin$. The size of the new set, $|\textrm{pow}(\mathbb{N}&lt;/em&gt;{m})| = 2 \cdot 2^{m - 1} = 2^{m}$.  This means that $P(m)$ holds.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Hence, $C$ must be empty.  We reached a contradiction using the well-ordering principle by showing the $P(m)$ holds for $m \in C$, which must mean the $C$ is empty.  If there are no counter-examples, then $P(n)$ holds for all $n \in \mathbb{N}$.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;induction-principle&#34;&gt;Induction Principle&lt;/h1&gt;

&lt;p&gt;Let $P$ be a predicated on $\mathbb{N}$.  If&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$P(0)$ is true, and&lt;/li&gt;
&lt;li&gt;$P(n) \implies P(n + 1)$ for all $n \in \mathbb{N}$,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;then&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;$P(m)$ is true for all $m \in \mathbb{N}$.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;template-for-induction-proofs&#34;&gt;Template for Induction Proofs&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;State, &amp;ldquo;We prove by induction.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Define a predicate, $P(n)$.  This is the &lt;em&gt;induction hypothesis&lt;/em&gt;.  Our goal is to show that $P(n)$ is true for all $n \in \mathbb{N}$.&lt;/li&gt;
&lt;li&gt;Prove $P(0)$ is true.  (&lt;em&gt;base case&lt;/em&gt; or &lt;em&gt;basis step&lt;/em&gt;.)&lt;/li&gt;
&lt;li&gt;Prove that $P(n) \implies P(n + 1)$ for every $n \in \mathbb{N}$.  (&lt;em&gt;induction step&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Conclude that $P(n)$ is true for all $n \in \mathbb{N}$ by induction.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;How is the method of &lt;em&gt;proof by induction principle&lt;/em&gt; similar to and different from &lt;em&gt;proof by well-ordering principle&lt;/em&gt;?&lt;/p&gt;

&lt;h2 id=&#34;induction-practice&#34;&gt;Induction Practice&lt;/h2&gt;

&lt;p&gt;Prove the non-negative integers are well ordered by the induction principle.&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;Prove the power set size property, $|\textrm{pow}(A)| = 2^{|A|}$, by
induction.&lt;/p&gt;

&lt;p&gt;###&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problem Set 3 Comments</title>
      <link>https://uvacs2102.github.io/ps3comments/</link>
      <pubDate>Thu, 22 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/ps3comments/</guid>
      <description>&lt;p&gt;The solutions and comments for PS3 are now posted in collab: &lt;a href=&#34;https://collab.itc.virginia.edu/access/content/group/e0b17949-c94c-466b-835a-196381f3f911/ps3_solutions.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should find your graded assignment as a new PDF attachment with
markup on it in collab (if you submitted with teammates, please check
with your partners).&lt;/p&gt;

&lt;p&gt;The meaning of the scores is the same as for PS1 and PS2.  A score of 6
means you got everything we expected out of this assignment, and 5 means
you did well for the most part by had some answers that should have been
better.  Scores above 6 are for excellent work.  (In the gradebook,
collab sometimes shows the grades scaled by 100 for some buggy reason.
Although receiving a score of 100+ is possible in theory, no one
received more than 8 points for this assingment.  If you see a score
about 100, the meaning is that score divided by 100.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 9: Cardinality</title>
      <link>https://uvacs2102.github.io/class9/</link>
      <pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/class9/</guid>
      <description>

&lt;h3 id=&#34;schedule&#34;&gt;Schedule&lt;/h3&gt;

&lt;p&gt;This week you should finish reading MCS Chapter 4 (section 4.5) and
Section 5.1.  We will discuss Induction (Section 5.1) next class.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://uvacs2102.github.io/ps/ps4&#34;&gt;&lt;strong&gt;Problem Set 4&lt;/strong&gt;&lt;/a&gt; is due &lt;strong&gt;Friday at 6:29pm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;notpdf&#34;&gt;
   &lt;center&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;9612efccd7d943e2acdc844eeac874f4&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
   &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightm&#34;&gt;
   &lt;a href=&#34;https://uvacs2102.github.io/docs/class9.pdf&#34;&gt;See PDF Version for &lt;b&gt;Notes and Questions&lt;/b&gt;&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightg&#34;&gt;
&lt;strong&gt;Challenge Problem.&lt;/strong&gt; How many self-inverting relations, &lt;em&gt;R&lt;/em&gt;: &lt;em&gt;N&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; &amp;rarr; &lt;em&gt;N&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt;, are there?  (Where &lt;em&gt;N&lt;/em&gt;&lt;sub&gt;&lt;em&gt;k&lt;/em&gt;&lt;/sub&gt; is the set of all non-negative integers less than &lt;em&gt;k&lt;/em&gt;, and a relation is self-inverting if &lt;em&gt;R&lt;/em&gt; = &lt;em&gt;R&lt;/em&gt;&lt;sup&gt;-1&lt;/sup&gt;.)
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;/div&gt;&lt;!--endpdf--&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;latex&#34;&gt;&lt;/p&gt;

&lt;h1 id=&#34;relation-practice&#34;&gt;Relation Practice&lt;/h1&gt;

&lt;p&gt;The &lt;em&gt;inverse&lt;/em&gt; of a relation $R: A \rightarrow B, G \subseteq A \times B$ is defined by reversing all the arrows:
$$
R^{-1}: B \rightarrow A, G^{-1} \subseteq B \times A
$$&lt;/p&gt;

&lt;p&gt;$$
(b, a) \in G^{-1} \iff \fillin\fillin\fillin\fillin
$$&lt;/p&gt;

&lt;p&gt;What does it mean if $R \equiv R^{-1}$?&lt;/p&gt;

&lt;h1 id=&#34;set-cardinality&#34;&gt;Set Cardinality&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Finite Cardinality.&lt;/strong&gt; If $A$ is a finite set, the &lt;em&gt;cardinality&lt;/em&gt; of
  $A$, written $|A|$, is the number of elements in $A$.&lt;/p&gt;

&lt;p&gt;Does this definition require adding a new fundamental set operation?&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Alternate definition:&lt;/strong&gt; The &lt;em&gt;cardinality&lt;/em&gt; of the set
$$
N_k = { n | n \in \mathbb{N} \wedge n &amp;lt; k }
$$
is $k$.  If there is a &lt;em&gt;bijection&lt;/em&gt; between two sets, they have the same
cardinality.&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;If there is a &lt;em&gt;surjective relation&lt;/em&gt; between $A$ and $B$ what do we know
about their cardinalities?&lt;/p&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;p&gt;If there is a &lt;em&gt;surjective function&lt;/em&gt; between $A$ and $B$ what do we know
about their cardinalities?&lt;/p&gt;

&lt;!--page--&gt;

&lt;p&gt;If there is a &lt;em&gt;total surjective function&lt;/em&gt; between $A$ and $B$ what do we know
about their cardinalities?&lt;/p&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;p&gt;If there is a &lt;em&gt;total surjective injective function&lt;/em&gt; between $A$ and $B$
what do we know about their cardinalities?&lt;/p&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;p&gt;What is the cardinality of $A \cup B$?&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;power-sets&#34;&gt;Power Sets&lt;/h1&gt;

&lt;p&gt;The &lt;strong&gt;power set&lt;/strong&gt; of $A$ ($\textrm{pow}(A)$)is the set of all subsets of $A$:
$$
B \in \textrm{pow}(A) \iff B \subseteq A.
$$&lt;/p&gt;

&lt;p&gt;Prove that the size of the power set of a set $S$ with $|S| = N$ is
$2^N$ using the well-ordering principle.  (See MCS 4.5.1 for an
alternate proof.)&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Survey Questions (Part 3)</title>
      <link>https://uvacs2102.github.io/surveyquestions3/</link>
      <pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/surveyquestions3/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s the third (and final!) installment of responses to questions
submitted in the registration surveys (see &lt;a href=&#34;https://uvacs2102.github.io/surveyquestions&#34;&gt;Part 1&lt;/a&gt;
and &lt;a href=&#34;https://uvacs2102.github.io/surveyquestion2&#34;&gt;Part 2&lt;/a&gt; for the earlier responses).  If you
missed your chance to ask a question on the registration survey, or have
new questions now the course is further along, feel free to send them
(directly or anonymous is fine if you prefer).&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
What does Professor Evans do in his free time?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
The meaning of &amp;ldquo;free time&amp;rdquo; is pretty strange for a professor, since all
your time is basically &amp;ldquo;free&amp;rdquo;.  You have remarkably few real
requirements on your time (other than showing up for class a couple
times a week every other semester, and filing an annual report once a
year), and can mostly &lt;a href=&#34;http://www.cs.virginia.edu/~evans/paradise/time/&#34;&gt;choose how you want to spend your
time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;How you might view things more normally, one&amp;rsquo;s view of &amp;ldquo;free time&amp;rdquo;
changes a lot after having a family.  Before that, I would have
considered my teaching and research work as the main thing I do, and the
time I&amp;rsquo;m not doing that as &amp;ldquo;free time&amp;rdquo;, which I would mostly spend
&lt;a href=&#34;http://www.cs.virginia.edu/~evans/pictures/basement/&#34;&gt;playing&lt;/a&gt; and
&lt;a href=&#34;http://www.cs.virginia.edu/~evans/france98/&#34;&gt;wa&lt;/a&gt;&lt;a href=&#34;http://www.cs.virginia.edu/~evans/pictures/columbus/&#34;&gt;tc&lt;/a&gt;&lt;a href=&#34;http://www.cs.virginia.edu/~evans/pictures/korea2002/&#34;&gt;hi&lt;/a&gt;&lt;a href=&#34;http://www.cs.virginia.edu/~evans/pictures/za2010/&#34;&gt;ng&lt;/a&gt;
soccer, music, and mostly bad TV shows.&lt;/p&gt;

&lt;p&gt;Now, I view the main things I do as revolving around my children (4-year
old daughter and 1 &amp;frac12;-year old son), and can mostly schedule the rest
of my life around that (one of the perks of being a professor, instead
of having a real job!).  I do get to do lots of fun things with the kids
but don&amp;rsquo;t really consider that &amp;ldquo;free time&amp;rdquo; in the traditional sense.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
In the lecture, did you choose to mod(629) because its semiprime? And if so is that  why the graph became super scattered?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
   Great question!&lt;/p&gt;

&lt;p&gt;Since its been a while, here&amp;rsquo;s the picture from &lt;a href=&#34;https://uvacs2102.github.io/class1&#34;&gt;Class 1&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;img src=&#34;https://uvacs2102.github.io/images/figure629.png&#34;&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;It was generated by this (very ugly and brute force) python code:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;
import numpy as np
import matplotlib.pyplot as plt

def ellip_curve():
    x = np.arange(-2, 10, 0.1);
    y = np.sqrt(x ** 3 + 7)
    plt.plot(x, y)
    plt.show()

def ellip_curve_field():
    xpoints = []
    ypoints = []
    G = 629
    for x in range(500):
        for y in range(500):
            if y ** 2 % G == (x ** 3 + 7) %  G:
                xpoints.append(x)
                ypoints.append(y)
    plt.plot(xpoints, ypoints, marker=&#39;+&#39;, linestyle=&#39;none&#39;, color=&#39;r&#39;)
    plt.show()

ellip_curve_field()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I picked 629 just because its one of my &lt;a href=&#34;http://dorina.org/&#34;&gt;favorite numbers&lt;/a&gt;, but the fact that is has two large factors (17 * 37) makes it produce a less regular graph than we would get for a more divisible number.  For example, here is the graph for modulus 628 (&lt;a href=&#34;http://www.wolframalpha.com/input/?i=factor+628&#34;&gt;2 * 2 * 157&lt;/a&gt;):
&lt;center&gt;&lt;img src=&#34;https://uvacs2102.github.io/images/figure628.png&#34;&gt;&lt;/center&gt;
which seems to have more patterns in it than the one for modulus 631 (&lt;a href=&#34;http://www.wolframalpha.com/input/?i=factor+631&#34;&gt;prime&lt;/a&gt;)
&lt;center&gt;&lt;img src=&#34;https://uvacs2102.github.io/images/figure631.png&#34;&gt;&lt;/center&gt;
Of course, the actual modulus values used for cryptosystems like bitcoin are
huge prime numbers (2&lt;sup&gt;256&lt;/sup&gt; - 2&lt;sup&gt;32&lt;/sup&gt; - 977 for bitcoin&amp;rsquo;s curve, which is otherwise the same as this one).
   &lt;/div&gt;
   &lt;div class=&#34;question&#34;&gt;
How long have you been teaching this course for?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
When you filled out the survey, about 3 days.  Now, its been about 4 weeks.  This is my first time teaching cs2102, but I&amp;rsquo;ve taught &lt;a href=&#34;https://www.cs.virginia.edu/evans/courses&#34;&gt;lots of other courses&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
More applications of Discrete Math (we talked about encryption, which was really interesting, but I would like to hear about more applications); Professor Evans&amp;rsquo; field of research and maybe its relation to Discrete Math
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
Yes, I&amp;rsquo;ll try to keep this in mind and connect things to applications as
much as possible, but the gap between some of the theory we will learn
and applications is sometimes fairly large (that is, we need to get
fairly deep into the theory before we can connect it to applications
well).  That said, nearly every concept in this class does have clear connections to applications in computing, and we&amp;rsquo;ll see many examples, and I&amp;rsquo;m always happy to talk about more in office hours.&lt;/p&gt;

&lt;p&gt;My research is in computer security and applied cryptography, which is
entirely built on discrete math.  I will try to integrate this into some
of the lectures, but definitely have some classes toward the end of the
semester that get more into how discrete math is essential for
cryptography, and maybe even how some of the problems you&amp;rsquo;re learning
about in this class can be used to enable zero-knowledge proofs (that
is, proving that you know something without revealing anything about it)
and multi-party computation (enabling two people to compute a function
together without revealing any information about their inputs).
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
How to get an A?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
If you are able to demonstrate good understanding of the key concepts in
the course, and ability to use them to solve problems well, you&amp;rsquo;ll get
an A in the class.  Working effectively and consistently on the
assignments throughout the semester, of course, should help.  It is also
important to ask for help, focusing on your understanding of concepts,
not just on the immediate goal of being able to answer some question on
a problem set.  Most people will also benefit greatly by finding a study group to work with that works well together, where you are enhancing your
learning by explaining things to others, and testing the limits of your
understanding by having others question your assumptions and approaches.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
How much of this course is pure math, how much is computing, and how much is both? (I apologize for being so vague)
   &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
This is a math course (hence the name Discrete Mathematics), but also a
computer course (hence the course number cs2102).  I would claim all the
math we do in the class has some significant relevance to computing, but
it is also selected partly for relevance to computing and partly for
being interesting math (at least in my view, or that of the textbook
author&amp;rsquo;s).  I would say the decisions about what to include in the class
are based about 50% on relevance to computing and 50% on interesting
math (which would mean that something that is highly relevant to
computing but uninteresting math would not be covered in favor of
something that is less directly relevant to computing but interesting
math).
   &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
Are there available solutions to the textbook practice problems?
   &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
Not for most of them.  I understand that it would be very helpful to be
able to look at solutions after you try problems yourself.  We&amp;rsquo;ll
provide solutions to the problems assigned on problem sets, but if you
have other problems that you&amp;rsquo;ve tried to solve on your own and want to get feedback on your solution or suggestions for a good solution, feel free to send your solution (or attempt and explain what you are trying to do) to me.
   &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
I want to major in CS, but I am not sure I want to go into programming. What can Discrete Mathematics help with in deciding a different career path using a computer science degree?
   &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
I don&amp;rsquo;t expect this class will be that helpful directly in exploring
possible computing careers, but do hope it will give you the background
to succeed in many possible careers.  What I would say is that if you
enjoy and excel and the kinds of problems we do in this class, you are
well suited to careers in aspects of computing at the level of
designing, reasoning about, and defining systems, as well as in careers where you are reasoning about ideas.
   &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
How is the course related to coding?
   &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
I usually interpret &lt;em&gt;coding&lt;/em&gt; as the process of turning a well described
algorithm into code in some programming language.  This course won&amp;rsquo;t
help too much with that.  It is more related to &lt;em&gt;programming&lt;/em&gt;, which I
view as the process of finding a program that solves some problem.  This
includes both devising the algorithms and data structures to use, and
writing the code to implement them.  This course should help you get
better at constructing programs and reasoning about whether or not they
are correct.
   &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
Were you ever discouraged by failure while studying computer science?
   &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
Yes, many times!  As one memorable example, in my &amp;ldquo;Advanced Computer
Science&amp;rdquo; course in high school the teacher assigned us to implement
quicksort (I think this was in BASIC).  I couldn&amp;rsquo;t get it to work, and
got very frustrated, and refused to turn anything in.  Other students
turned in obviously broken programs, but got most credit for their
attempts.  I ended up getting a B in the course as a result, and being
very upset about it, but to no avail.  I did make my peace with
quicksort later, and its now one of my favorite algorithms (and I&amp;rsquo;ve
been privledged to meet its inventor, Tony Hoare, several times and even
have dinner with him).
   &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
Is this course harder to comprehend than other courses and what is the best way to prepare for this course and the exams and home work that will be provided?
   &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
I think this course is probably harder to comprehend than most courses
you take, both because of the material and my general approach to teaching.  For most students, the material in this course requires you to learn to think in new and unfamiliar ways, and to develop new mental models, not just to learn new things that fit well into your well-developed mental models.  My approach to teaching emphasizes challenging students to learn things by exploring things on your own after (hopefully) the right context has been developed to enable this.  I believe this is important for really learning things well, as well as developing your abilities to be creative thinkers.  But, this is different from what students typically expect and are accustomed to classes where you are given a lot more guidance about what to do and prescribed how to do things.
      &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
Will I be able to survive with Python experience but no previous Java experience?
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
Yes.  There is no requirement to have experience with either Python or Java, but just to have enough familiarity with some programming language to understand programs.
      &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
How are exams like?
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
The plan for the first exam is to have an in-class exam, with problems
that you should be well prepared to answer if you understand the problem
sets.  The exam questions will be similar to problem set questions, but
less difficult and complex given the limited time available during the
exam.
     &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
How far do you suggest we delve into the world of math in order to become the best computer scientist we can be? What other courses might help broaden our mathematical background in a way that is beneficial to our computer science studies?
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
The most direct classes that follow from this one are cs3102 (Theory of
Computation) and cs4102 (Algorithms).  Many computing courses involve a
lot of math including graphics (mostly linear algebra), cryptography
(mostly discrete math), and machine learning (includes more continuous
math, as well as lots of linear algebra and discrete math).  In general, any good math course should help develop your abstract thinking abilities in ways that will be useful in computing, although some will have more direct applications in computing than others.
     &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
How does the material we have learned so far relate to computer science as a whole?  Do programmers in the real world need to know how to write proofs
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
If the &amp;ldquo;real world&amp;rdquo; means a typical software developer in industry, then
it is pretty rare for a programmer to need to write a &amp;ldquo;formal proof&amp;rdquo; in
a mathematical style, but very common for a programmer to need to form a
strong argument that convinces others an idea is correct (this is really
what a proof is).  In terms of mathematical-style proofs, these are very
common in computing research and most research papers (even in systems
areas like networking and programming languages) include several proofs.&lt;br /&gt;
    &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
What is the best internship and extra-curricular programs relating to computer science that you would recommend?
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
There are lots of great opportunities at UVA.  I&amp;rsquo;ve been impressed with &lt;a href=&#34;http://hackcville.com/&#34;&gt;HackCville&lt;/a&gt; and the &lt;a href=&#34;http://cnsatuva.site/&#34;&gt;Computer and Network Security Club&lt;/a&gt; is great.&lt;/p&gt;

&lt;p&gt;Away from Charlottesvile, the &lt;a href=&#34;https://www.recurse.com/&#34;&gt;Recurse Center&lt;/a&gt;
is very cool (when I visited it was called Hacker School), and they have
students for summer sessions.&lt;/p&gt;

&lt;p&gt;Lots of students have great experiences doing research over the summer,
and there are many ways for students to get involved in research groups
and have paid positions over the summer (including &lt;a href=&#34;https://www.jeffersonswheel.org&#34;&gt;in
mine&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t want to mention specific companies for internships publicly
here, but there are some that I&amp;rsquo;ve heard students have great experiences
at, and other where the experiences are more mixed.  I&amp;rsquo;m happy to share
my thoughts on this privately during office hours (or make an
appointment to meet some other time).
    &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
Do you like turtles?
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
Absolutely!  Its &lt;a href=&#34;https://en.wikipedia.org/wiki/Turtles_all_the_way_down&#34;&gt;turtles all the way down&lt;/a&gt;.
    &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
How well have your past students performed in this course? I will admit that Day 1 was a bit intimidating for me.
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
I haven&amp;rsquo;t taught this course before, but in general students work hard
in my classes and hopefully learn a lot, and most students in my classes
end up getting As.  I don&amp;rsquo;t know what the distribution will be for this
class (and I don&amp;rsquo;t assign grades with a target distribution in mind),
but I hope to be able to have at least 2/3rds of the class get As (or at
least A-s), and the rest all get at least a B (but sometimes there is no
way to justify the desired grate).
   &lt;/div&gt;&lt;div class=&#34;question&#34;&gt;
Are any of the homeworks dropped?
    &lt;/div&gt;&lt;div class=&#34;answer&#34;&gt;
None are &amp;ldquo;dropped&amp;rdquo; per se, but the grades are computed with many
different weightings (some of which don&amp;rsquo;t count the early homeworks
heavily, and others which will only count the number of &amp;ldquo;green&amp;rdquo; star or
better homeworks) and generally the weighting that make your performance
look best is the one that will determine your grade.  All the homeworks
as important for learning the material well, but you shouldn&amp;rsquo;t be
stressed out about getting a low grade on one or two homeworks.
    &lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anonymous Feedback Comments</title>
      <link>https://uvacs2102.github.io/anonymousfeedback/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/anonymousfeedback/</guid>
      <description>&lt;p&gt;This anonymous comment was submitted through collab:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Hello Professor!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I have never been very strong at math, and whenever I take a math class I have to try very hard to keep up. This class has been the first time I have ever done a proof and I am having difficulty even getting a grasp of even the basics of this material. Would it be possible to work through more example problems in class in order to get an idea of how to apply these concepts? Also, I have sometimes have difficulty following the symbols that are used when you write in mathematical notation, would it be possible to explain some of the more complex symbols, or go a bit slower when writing them?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks!&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I understand what you are saying, and do appreciate the comment.&lt;/p&gt;

&lt;p&gt;First, on the notations.  If I use a notation that is unfamiliar, please
stop and ask for me to define it, or at least post on slack &lt;code&gt;#inclass&lt;/code&gt;
so someone else will notice and clarify it.  Notations are meant to be a
convenient and compact way to write things down, and should be
obfuscating the content.&lt;/p&gt;

&lt;p&gt;On the example problems, I think you are right that we should spend a
bit more time in lecture going through examples, but I also think
large-scale lectures like we have for this class are just about the
worst possible medium for doing this kind of technical work.  (I &lt;a href=&#34;https://web.archive.org/web/20160818072337/http://chronicle.com/blognetwork/castingoutnines/2012/04/03/udacity-cs101-whats-been-good/&#34;&gt;mostly
agree&lt;/a&gt;
with Robert Talbert&amp;rsquo;s description of &lt;a href=&#34;https://web.archive.org/web/20160315071640/http://chronicle.com/blognetwork/castingoutnines/2012/02/13/four-things-lecture-is-good-for/&#34;&gt;Four things lecture is good
for&lt;/a&gt;
and that lectures are a terrible way to cover material and transfer
information.)&lt;/p&gt;

&lt;p&gt;The reason large-scale lectures are such a bad format for going through
technical examples and learning from them is that the way to learn from
examples is to understand each step by figuring it out yourself, with
the right leading questions to get you to that step.  And, problems
don&amp;rsquo;t have just one way of solving them, so you don&amp;rsquo;t want to go through
a pre-set sequence of steps, but find a path to a solution that makes
most sense for whoever is working on it.  Spending lecture time going
through techincal examples inevitably will be boring for a significant
fraction of the class (that could already solve that problem on their
own), and will be bewildering for some other fraction of the class (that
misses some step in the explanation or is thinking about the problem in
some other way).  The best way to learn from examples is to go through
them in very small groups (ideally one-on-one), where everyone can
understand and contribute to each step.  The next best way is to read
examples at your own pace.  Going through written examples has the
benefit that everyone can go through at their own pace, and go back over
steps that didn&amp;rsquo;t make sense, and then try to work out the solution on
their own.  (The disadvantage is that if what is written doesn&amp;rsquo;t cover
some path that you are thinking about, or doesn&amp;rsquo;t explain something that
is unclear, then there is no way to get more information from the static
page.)&lt;/p&gt;

&lt;p&gt;The book (at least in my view) does do a great job with most example
problems, and has many good examples.  As I mentioned before, my
assumption is that if no one asks questions about content, including
examples, in the book, that means that everyone understood it and it is
not worthwhile to spend time in lecture repeating material you already
understand.&lt;/p&gt;

&lt;p&gt;Similarly, I expect everyone to read through the provided solutions to
the problem sets, which I hope are clear and understandable, but you
should ask questions if not.  Even if you did well on an assignment, it
should be worthwhile to read through the solutions, which often provide
more depth or different approaches to solving problems.&lt;/p&gt;

&lt;p&gt;So, the best thing to do is to come to office hours to go through
examples in person.  Next, to ask questions about examples from the book
or problems on the problem sets that are unclear, and then I&amp;rsquo;ll go
through those in class.&lt;/p&gt;

&lt;p&gt;That said, I do appreciate that it will sometimes be useful to go
through more basic examples in class, and will try and do this more, but
balance it with my goals of making class interesting and worthwhile for
people who are able to understand the text on their own.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problem Set 2 Comments</title>
      <link>https://uvacs2102.github.io/ps2comments/</link>
      <pubDate>Mon, 19 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/ps2comments/</guid>
      <description>&lt;p&gt;The solutions and comments for PS2 are now posted in collab: &lt;a href=&#34;https://collab.itc.virginia.edu/access/content/group/e0b17949-c94c-466b-835a-196381f3f911/ps2_solutions.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The grades will be released soon.  The grading scale for PS2 is similar
to what was used for PS1 (there is no &amp;ldquo;out of&amp;rdquo; goal, or &amp;ldquo;maximum&amp;rdquo;
score), but scores are intended to reflect whether or not you got what
was intended out of the assignment (or did better than those
expectations).  See the &lt;a href=&#34;https://uvacs2102.github.io/ps1comments/&#34;&gt;Problem Set 1
Comments&lt;/a&gt; for the meaning of
different scores.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problem Set 4</title>
      <link>https://uvacs2102.github.io/ps4announce/</link>
      <pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/ps4announce/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Problem Set 4&lt;/strong&gt; is &lt;a href=&#34;https://uvacs2102.github.io/docs/ps4.pdf&#34;&gt;now posted&lt;/a&gt;, and is due on &lt;strong&gt;Friday, 23
  September at 6:29pm&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 8: Relations</title>
      <link>https://uvacs2102.github.io/class8/</link>
      <pubDate>Thu, 15 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/class8/</guid>
      <description>

&lt;h3 id=&#34;schedule&#34;&gt;Schedule&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://uvacs2102.github.io/ps/ps3&#34;&gt;&lt;strong&gt;Problem Set 3&lt;/strong&gt;&lt;/a&gt; is due &lt;strong&gt;Friday at 6:29pm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;notpdf&#34;&gt;
   &lt;center&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;eaabcbbe2383494e9724b1904156f883&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
   &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightg&#34;&gt; &lt;strong&gt;Challenge Problem Opportunity.&lt;/strong&gt;
Apparently, people were not entirely convinced by my proof sketch in
class that the egg came before the chicken.  So, we&amp;rsquo;ll make it a
challenge problem to write the best proof that answers the question of
&amp;ldquo;which came first, the chicken or the egg?&amp;rdquo; (That is, you can either
prove the egg came first, or prove the chicken came first).  A
convincing proof would need to include clear definitions of &amp;ldquo;chicken&amp;rdquo;
and &amp;ldquo;egg&amp;rdquo;, and use inference rules, as well as axioms based on
biological assumptions (clearly stated), to make an irrefutable argument
supporting your position.  &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightm&#34;&gt;
   &lt;a href=&#34;https://uvacs2102.github.io/docs/class8.pdf&#34;&gt;See PDF Version for &lt;b&gt;Notes and Questions&lt;/b&gt;&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cs.utexas.edu/users/EWD/ewd08xx/EWD831.PDF&#34;&gt;Dijkstra&amp;rsquo;s explanation of what the natural numbers should start with 0&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;!--endpdf--&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;latex&#34;&gt;&lt;/p&gt;

&lt;h1 id=&#34;functions&#34;&gt;Functions&lt;/h1&gt;

&lt;p&gt;A &lt;strong&gt;function&lt;/strong&gt; is a mathematical datatype that associates elements from
one set, called the &lt;em&gt;domain&lt;/em&gt;, with elements from another set, called a
&lt;em&gt;codomain&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;$$ f: \textrm{\em domain} \rightarrow \textrm{\em codomain} $$&lt;/p&gt;

&lt;p&gt;If the function is &lt;em&gt;total&lt;/em&gt;, every element of the domain has one
associated codomain element; if the function is &lt;em&gt;partial&lt;/em&gt;, there may be
elements of the domain that do not have an associated codomain element.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Defining a function.&lt;/strong&gt; To define a function, we need to describe how
  elements in the domain are associated with elements in the codomain.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Set Products.&lt;/strong&gt; A &lt;em&gt;Cartesian product&lt;/em&gt; of sets $S_1, S_2, \cdots, S_n$
  is a set consisting of all possible sequences of $n$ elements where the
  $i$\textsuperscript{th} element is chosen from $S_i$.&lt;/p&gt;

&lt;p&gt;$$ S_1 \times S_2 \times \cdots \times S_n = { (s_1, s_2, \cdots, s_n) | s_i \in S_i } $$&lt;/p&gt;

&lt;p&gt;How many elements are in $A \times B$?&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;What are the (sensible) domains and codomains of each function below:&lt;/p&gt;

&lt;p&gt;$$ f(n) ::= |n| \qquad \qquad f(x) ::= x^2  \qquad\qquad f(n) ::= n + 1 \qquad\qquad f(a, b) ::= a / b $$&lt;/p&gt;

&lt;p&gt;$$ f(x) ::= \sqrt{x}  \qquad \qquad \qquad f(S) ::= \textrm{minimum}_{&amp;lt;}(S) $$&lt;/p&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;p&gt;For which of them is the function &lt;em&gt;total&lt;/em&gt;?&lt;/p&gt;

&lt;!--page--&gt;

&lt;p&gt;How are functions in your favorite programming language like and unlike
mathematical functions?&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h2 id=&#34;relations&#34;&gt;Relations&lt;/h2&gt;

&lt;p&gt;A &lt;strong&gt;binary relation&lt;/strong&gt;, $R$, consists of a domain set, $A$, and a
codomain set, $B$, and a subset of $A \times B$ called the &lt;em&gt;graph&lt;/em&gt; of
$R$.&lt;/p&gt;

&lt;p&gt;For each statement below, give the name and at least one example.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A binary relation where no element of $A$ has more than one outgoing edge:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A binary relation where every element of $A$ has exactly one outgoing edge:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A binary relation where every element of $B$ has exactly one incoming edge:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A binary relation where every element of $A$ has exactly one outgoing
edge and every element of $B$ has exactly one incoming edge:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##&lt;/p&gt;

&lt;p&gt;If there exists a &lt;em&gt;bijective&lt;/em&gt; relation between $S$ and $T$ defined by the graph $G$ which of these &lt;em&gt;must&lt;/em&gt; be true:&lt;/p&gt;

&lt;p&gt;a. there exists some &lt;em&gt;injective&lt;/em&gt; relation between $S$ and $T$.
b. there exists some &lt;em&gt;bijective&lt;/em&gt; relation between $T$ and $S$.
c. there exists a &lt;em&gt;total&lt;/em&gt; function, $f: S \rightarrow T$.
d. $S - T = \emptyset$.
e. the number of elements of $S$ is equal to the number of elements of $T$.
f. $G - (S \times T) = \emptyset$.
g. $(S \times T) - G = \emptyset$.
h. $(S \times T) - G \neq \emptyset$.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Generating PDFs</title>
      <link>https://uvacs2102.github.io/pdfs/</link>
      <pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/pdfs/</guid>
      <description>

&lt;p&gt;We are finding many of the assignment submissions for PS1 and PS2 are
barely readable.  When it is hard for the graders to read your answers,
you will get less useful feedback on your submission.  We are not
intentionally down-grading work that is hard to read, but you will lose
the benefit-of-the-doubt for answers that are too hard to read, and it
also makes a bad impression when your work is presented in a way that
looks careless.&lt;/p&gt;

&lt;p&gt;We provide some advice below on how to generate a readable PDF to
submit.  Please review what you are submitting before submitting it to
make sure that it will not cause the graders headaches attempting to
discern your answers from it.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve been forgiving on PS1 and PS2, but from PS3 on will be expecting
everyone to follow the directions well and generate readable
submissions, and will refuse to grade unreadable submissions.&lt;/p&gt;

&lt;h4 id=&#34;one-submission-per-team-with-everyone-s-name-and-id&#34;&gt;One Submission per Team, with Everyone&amp;rsquo;s Name and ID&lt;/h4&gt;

&lt;p&gt;Each team that works together should submit &lt;em&gt;exactly one&lt;/em&gt; assignment,
and it should have each team member&amp;rsquo;s name and email ID clearly at the
top of it.  When you neglect to do this, it causes a lot of extra
trouble for us.&lt;/p&gt;

&lt;h4 id=&#34;pdf-files-only&#34;&gt;PDF files only&lt;/h4&gt;

&lt;p&gt;Your submission must be a single, PDF file.  We will not grade Word
documents, images, or other formats.  We do make two exceptions:
&lt;a href=&#34;https://www.youtube.com/watch?v=GSIodz9GWxc#t=12&#34;&gt;entertaining
videos&lt;/a&gt; and
&lt;a href=&#34;http://www.cs.virginia.edu/~evans/cs1120-f11/all/2011/class-41-the-cake-of-computing&#34;&gt;cakes&lt;/a&gt;.
(If your answers are in the form of a cake, it make not be possible to
submit it through collab, but you can drop it off in person.)&lt;/p&gt;

&lt;h2 id=&#34;ways-to-generate-good-pdfs&#34;&gt;Ways to Generate Good PDFs&lt;/h2&gt;

&lt;p&gt;There are three ways to generate reasonable PDFs to submit: (1) use a
mathematical typesetting tool, (2) use a scanner that scans to PDF
files, or (3) use a camera.  If you use a scanner or a camera, the page
you are scanning has to be readable to begin with, and you have to scan
it well.  It is best to write on only one side of the paper, since often
the writing from the back side bleeds through in the scan or image.&lt;/p&gt;

&lt;p&gt;The most difficult to read submissions are when people use their mobile
phone camera to take a picture of handwritten paper, and then put the
image into a Word document without any filtering or processing.  This is
not a way to make a readable PDF, and its not fair to expect graders to
deal with that type of document.&lt;/p&gt;

&lt;p&gt;There are ways to generate readable PDFs using your mobile phone camera.
One tool that works for this is
&lt;a href=&#34;https://www.camscanner.com/user/download&#34;&gt;CamScanner&lt;/a&gt; (available as a
free app for limited use, for Android, iPhone, and Windows Phone).
There are lots of other scanning apps that should work - see &lt;a href=&#34;https://www.cnet.com/how-to/best-scanning-apps-for-android-and-iphone/&#34;&gt;&lt;em&gt;The best
scanning apps for Android and
iPhone&lt;/em&gt;&lt;/a&gt;.
Please look at the file you have generated before submitting it.  If you
are not able to generate a readable PDF using your phone, you should use
a scanner. There are public scanner to use in some of the UVA libraries
including in Clemons Library.&lt;/p&gt;

&lt;h2 id=&#34;mathematical-typesetting&#34;&gt;Mathematical Typesetting&lt;/h2&gt;

&lt;p&gt;More ambitious, forward-thinking, aesthetically-minded, or
handwriting-averse students will prefer to use a system that generates
PDFs directly.  The system used for nearly all technical typesetting is
&lt;a href=&#34;https://www.latex-project.org/&#34;&gt;LaTeX&lt;/a&gt; (which was started by &lt;a href=&#34;https://en.wikipedia.org/wiki/Leslie_Lamport&#34;&gt;Leslie
Lamport&lt;/a&gt; who won the
Turing Award in 2013, and builds on the TeX typesetting program created
by &lt;a href=&#34;http://cs.stanford.edu/~uno/&#34;&gt;Donald Knuth&lt;/a&gt;, who won the Turing
Award in 1974; neither of the awards were for work on typesetting).
(Word and Google Docs do include equation editors, and you are welcome
to use these if you want for cs2102.  But, anyone doing serious
mathematics quickly finds that these gui-type equation editors are both
painfully slow and not able to generate good output.  So, I don&amp;rsquo;t
recommend using them unless you already know how and are happy with
this.)&lt;/p&gt;

&lt;p&gt;LaTeX has a fairly steep learning curve, but there are lots of tools
available now to make it easier to get started.
&lt;a href=&#34;https://www.sharelatex.com/&#34;&gt;ShareLaTeX&lt;/a&gt; is a web-based, multi-user
LaTeX editor; &lt;a href=&#34;http://www.texniccenter.org/&#34;&gt;TeXnicCenter&lt;/a&gt; is a LaTeX
editor for Windows; and &lt;a href=&#34;https://www.texpadapp.com/&#34;&gt;texpad&lt;/a&gt; is
available for Mac and iOS.&lt;/p&gt;

&lt;p&gt;If you are expecting to take further math and CS courses, it is worth
learning to use this to produce documents efficiently.  Some later CS
courses required submissions to be typeset using LaTeX (depending on
whom is teaching them, this is sometimes the case for CS3102 and
CS4102), and nearly all research papers are written this way.  You are
not required to produce beautifully-typeset problem sets for CS2102 and
shouldn&amp;rsquo;t spend inordinate extra time just trying to make your answers
look great, but we will definitely appreciate your efforts to make
submissions easier to read, and after a small effort in getting started
with LaTeX, you may find that it takes less time than hand-writing
(especially since it is easy to edit, instead of needing to rewrite).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Anonymous Feedback Comments</title>
      <link>https://uvacs2102.github.io/anonymousfeedback/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/anonymousfeedback/</guid>
      <description>&lt;p&gt;I wanted to discuss two anonymous comments that were submitted through
Collab (there&amp;rsquo;s no way to respond directly to submitters, so I&amp;rsquo;ll post
my response here).&lt;/p&gt;

&lt;p&gt;Comment 1:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The homework is significantly longer and harder than Edwards&amp;rsquo;. Also, it extends beyond lecture content too much :(&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Comment 2:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Professor,&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;I believe that we are moving in too fast a pace at the current moment. I am truly enjoying the class material however before I am fully able to grasp the concepts we quickly move on to the next. I understand that this class moves fast however I have attended every single lecture and still did not understand how to solve quite a few of the questions in problem set 2. In fact in more than one instance I had no idea what some of the questions were asking. I would appreciate it if we could have a brief overview of the problem set before they are due. I appreciate you taking the time to address the questions in the later part of the week but we had about 15 minutes to ask pertinent questions for an assignment due less than 48 hours.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;I am truly enjoying this class but I will fall very far behind in this class if we continue to go at the pace we are. If we could solve more sample questions related to the problem sets I feel it would go a long way in understanding how to utilize the tools we are being taught.&lt;/em&gt;&lt;br /&gt;
&lt;em&gt;I hope I am not out of line. I also didn&amp;rsquo;t feel comfortable bringing this up personally because I am not sure if I am in the majority, minority, or the rarity. I have never had problems with a math course before and have been comfortable doing proofs prior to this. I suppose I am not as fast a learner as the class demands.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, I do appreciate getting comments like this, and although I would
hope most students feel that they could safely send comments like this
without needing anonymity, I understand why you prefer to send them
anonymously.&lt;/p&gt;

&lt;p&gt;As for the content of Comment #1, what you should be worried about is if the workload
for the course seems unreasonably high for a 3-unit class.  As the
university defines things, a 3-unit course is supposed to involve 9
hours of academic work per week (assuming you are coming to class for
2.5 hours per week, this leaves 6.5 hours for outside work).  It is
sometimes hard to estimate how long it will take students to do an
assignment, but I don&amp;rsquo;t think the readings and problem sets assigned so
far in this course should take more than this for most students.&lt;/p&gt;

&lt;p&gt;If you find you are spending unreasonably more than this, then it is
either because you are not using the time effectively (this is
especially a challenge when students work in teams to keep everyone
focused and on task); you are trying to do more than is intended (which
is great if you have time for it); you are solving problems using a
tedious, painstaking approach rather than looking for a clever, fast
solution (e.g., making an exhaustive truth table for a 7-input
function); you are lacking in some of the necessary background or
experience so need more time; or (perhaps most likely) because I have
grossly underestimated how long things take when you are learning them
for the first time (and me teaching them for the first time).&lt;/p&gt;

&lt;p&gt;I do want to understand if things are taking too long and why, so if it
seems like the workload for the course is unreasonable I encourage you
to come to office hours and discuss what you are doing and whether their
might be more effective ways to use your time.&lt;/p&gt;

&lt;p&gt;As for the problems &amp;ldquo;extending beyond lecture content&amp;rdquo;, that is
absolutely what you should expect (indeed, ambitious students should be
insulted by assignments that don&amp;rsquo;t go beyond what was covered in
lecture!).  The problems are not designed to just test if you have been
paying attenting in class and can repeat what is done in class in a
straightforward way.  Sometimes there will be &amp;ldquo;warm-up&amp;rdquo; problems
intended to check basic understanding, but the goal of most of the
problem set problems is to deepen your understanding of the concepts
introduced in class and in the book and improve your abilities as a
mathematical thinker, by having you apply them yourself in ways you
haven&amp;rsquo;t seen before.&lt;/p&gt;

&lt;p&gt;For Comment #2, I agree that we have covered a lot quite quickly at the
beginning of the course.  In general, there is always a tension between
wanting to include and get to the most interesting material and making
sure the foundations are strong.&lt;/p&gt;

&lt;p&gt;The best way to make sure I spend more class time on topics is to ask
questions about them.  My default assumption (which I know is
na&amp;#239;ve, but I also think is fair) is that if something is explained
well in the assigned readings and no one asks questions about it, then I
shouldn&amp;rsquo;t waste class time going over it (unless I have something I
think is worthwhile beyond or different from what was in the reading).
So far (scanning over &lt;code&gt;#general&lt;/code&gt; now), very few students have asked
questions like this; nearly all the questions are about clarifying
specific problems from the problem sets.  I am happy to spend more class
time on topics covered in the book if people ask questions about them.
It doesn&amp;rsquo;t even have to be a precise question - its fine to ask things
like, &amp;ldquo;I didn&amp;rsquo;t understand the set builder notation, can you go over an
example in class?&amp;rdquo; (otherwise, I think its quite boring to talk about
set builder notation, and that what is written in the book is sufficient
for everyone to understand it without me spending time on it in class).&lt;/p&gt;

&lt;p&gt;The other thing I want to say on this is that we&amp;rsquo;ve introduced a lot of
new things fast, but all of the main themes of the course will keep
recurring throughout the semester.  In particular, towards the two main
goals of getting good at making and using definitions, and understanding
and constructing proofs, most of the concepts we have introduced already
will be seen over and over again throughout the course.  The new topics
will build on the knowledge and understanding you have, but also (I
hope) deepen your understanding of the early topics.&lt;/p&gt;

&lt;p&gt;(As one concrete example, following the design of the book, we
introduced well-ordering proofs early.  We will soon get to proof by
induction, which is dependent on well-ordering, and similar to
well-ordering proofs in many ways.  Proof by induction is probably the
most powerful proof technique you&amp;rsquo;ll learn in this class, and one used
all the time in computer science, and we&amp;rsquo;ll see many different examples
of proof by induction throughout the semester since its something that
most people need to see many times in different ways and contexts before
really getting it.)&lt;/p&gt;

&lt;p&gt;Finally, in terms of the overall pacing, my plan for the course (which
is very much flexible) is to cover about half the material that is
covered in the comparable MIT course.  This seems reasonable to me since
I expect UVA students to be as good as MIT students, but the way MIT
classes work students take fewer courses than UVA students do (it would
be more like a 4-unit class here), and there is a lot more class time
than we have (they have 3 meetings a week, plus recitation, and four
evening &amp;ldquo;midterm&amp;rdquo; exams), so the actual class time is about 2x what we
have.  As another example, &lt;a href=&#34;http://www-inst.eecs.berkeley.edu/~cs70/sp15/#syllabus&#34;&gt;Berkeley&amp;rsquo;s CS70
class&lt;/a&gt; covers
things with a quite different approach, but also covers fair bit more
material than is planned for cs2102 (and with resources more like we
have as a public school, they expect students to do their own homework
grading).  If you think I shouldn&amp;rsquo;t expect you to be competitive with
Berkeley or MIT students, you can also compare to the &lt;a href=&#34;https://www.cs.unc.edu/~baruah/Teaching/2015-2Fa/&#34;&gt;UNC
course&lt;/a&gt;, which covers
a similar amount of material to this course but with 8am Monday
lectures.  (I do, of course, have much higher expectations of UVA
students than what &lt;a href=&#34;https://www.math.vt.edu/people/mcquain/math2534.htm&#34;&gt;Virginia
Tech&lt;/a&gt; does, but I
hope you would not use that as a sign that our expectations are too
high!)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Class 7: Sets</title>
      <link>https://uvacs2102.github.io/class7/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/class7/</guid>
      <description>

&lt;h3 id=&#34;schedule&#34;&gt;Schedule&lt;/h3&gt;

&lt;p&gt;Everyone should have received their comments and grade on PS1
yesterday. Please make sure to read the comments posted on the website
about how PS1 was graded.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://uvacs2102.github.io/ps/ps3&#34;&gt;&lt;strong&gt;Problem Set 3&lt;/strong&gt;&lt;/a&gt; is due &lt;strong&gt;Friday at 6:29pm&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I will have &amp;ldquo;make-up&amp;rdquo; office hours tomorrow (Wednesday) 3:30-4:30pm (in
addition to my usual Wednesday 1-2pm office hours).  There have been
some adjustments to the office hours schedule, please check the
calendar.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;notpdf&#34;&gt;
   &lt;center&gt;
&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;e2acfe2e97794da8a9a7f5fec369147e&#34; data-ratio=&#34;1.77777777777778&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
   &lt;/center&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlightm&#34;&gt;
   &lt;a href=&#34;https://uvacs2102.github.io/docs/class7.pdf&#34;&gt;See PDF Version for &lt;b&gt;Notes and Questions&lt;/b&gt;&lt;/a&gt;.
   &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.egr.unlv.edu/~bein/SIGACT/lewin.html&#34;&gt;Tom Leighton&amp;rsquo;s Remarks on Danny Lewin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://archive.boston.com/business/technology/articles/2011/09/04/akamai_thrives_in_the_spirit_of_its_lost_founder/?camp=pm&#34;&gt;&lt;em&gt;A Lost Spirit Still Inspires&lt;/em&gt;&lt;/a&gt;, Boston Globe, 4 September 2011.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/No-Better-Time-Remarkable-Transformed/dp/0306821664&#34;&gt;&lt;em&gt;No Better Time: The Brief, Remarkable Life of Danny Lewin, the Genius Who Transformed the Internet&lt;/em&gt;&lt;/a&gt; by Molly Knight Raskin.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.technologyreview.com/s/400799/akamais-algorithms/&#34;&gt;&lt;em&gt;Akamai&amp;rsquo;s
Algorithms&lt;/em&gt;&lt;/a&gt;
Technology Review, Interview with Tom Leighton, 1 September 2000.&lt;/p&gt;

&lt;p&gt;David Karger, Eric Lehman, Tom Leighton, Matthew Levine, Daniel Lewin,
Rina Panigrah.  &lt;a href=&#34;https://www.akamai.com/kr/ko/multimedia/documents/technical-publication/consistent-hashing-and-random-trees-distributed-caching-protocols-for-relieving-hot-spots-on-the-world-wide-web-technical-publication.pdf&#34;&gt;&lt;em&gt;Consistent Hashing and Random Trees: Distributed
Caching Protocols for Relieving Hot Spots on the World Wide
Web&lt;/em&gt;&lt;/a&gt;. (Note:
tradition in theory papers is to list all authors alphabetically). 29th
ACM Symposium on Theory of Computing, 1997.&lt;/p&gt;

&lt;p&gt;The SAT solver I demo&amp;rsquo;d in class today was from the &lt;a href=&#34;https://uvacs2102.github.io/class6&#34;&gt;Class 6&lt;/a&gt;
notes: Sahand Saba&amp;rsquo;s &lt;a href=&#34;http://sahandsaba.com/understanding-sat-by-implementing-a-simple-sat-solver-in-python.html&#34;&gt;&lt;em&gt;Understanding SAT by Implementing a Simple SAT
Solver in
Python&lt;/em&gt;&lt;/a&gt;
[&lt;a href=&#34;https://github.com/evansuva/simple-sat&#34;&gt;Code with my modifications:
https://github.com/evansuva/simple-sat&lt;/a&gt;].  You should, of course, feel free to use this (or any other SAT solver you want) to help with solving and checking your answers for &lt;a href=&#34;https://uvacs2102.github.io/ps/ps3&#34;&gt;Problem Set 3&lt;/a&gt; (and any other assignment in this class).&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;!--endpdf--&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;latex&#34;&gt;&lt;/p&gt;

&lt;h1 id=&#34;notes-and-questions&#34;&gt;Notes and Questions&lt;/h1&gt;

&lt;p&gt;What is a &lt;em&gt;data type&lt;/em&gt;?  What are the differences between a &lt;em&gt;mathematical
data type&lt;/em&gt; and a data type in your favorite programming language?&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;A &lt;strong&gt;set&lt;/strong&gt; is an unordered colection of objects.  A set is defined by its
membership operation: $x \in S$ is true if $x$ is in the set $S$.&lt;/p&gt;

&lt;h2 id=&#34;set-operations&#34;&gt;Set Operations&lt;/h2&gt;

&lt;p&gt;Subset: $\subseteq$ (note that this does not mean &lt;em&gt;strict subset&lt;/em&gt;)
$$A \subseteq B \iff \forall x \in A. \fillin \in \fillin.$$&lt;/p&gt;

&lt;p&gt;Set Equality: $=$
$$A = B \iff A \fillin B \wedge B \fillin A.$$&lt;/p&gt;

&lt;p&gt;Set Union: $\cup$
$$\forall x. x \in A \cup B \iff x \in A \fillin x \in B.$$&lt;/p&gt;

&lt;p&gt;Set Intersection: $\cap$
$$\forall x. x \in A \cap B \iff x \in A \fillin x \in B.$$&lt;/p&gt;

&lt;p&gt;Set Difference: $-$
$$\forall x. x \in A - B \iff x \in A \wedge x \notin B.$$&lt;/p&gt;

&lt;p&gt;Set Complement: $\overline{S}$
$$ \forall x. x \in D. x \in \overline{A} \iff x \notin A.$$&lt;/p&gt;

&lt;p&gt;($D$ is the ``domain of discourse&amp;rdquo;, the universe of all objects under
discussion.)
&lt;!--page--&gt;&lt;/p&gt;

&lt;h3 id=&#34;russell-s-paradox&#34;&gt;Russell&amp;rsquo;s Paradox&lt;/h3&gt;

&lt;p&gt;$$ S_{R} = \textrm{ the set of all sets that are not members of themselves} $$&lt;/p&gt;

&lt;p&gt;Is $S&lt;em&gt;{R} \in S&lt;/em&gt;{R}$?&lt;/p&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h3 id=&#34;set-practice&#34;&gt;Set Practice&lt;/h3&gt;

&lt;p&gt;Here are some practice problems involving sets.  We won&amp;rsquo;t go through
these in class, but you should ask questions about any are unclear.  (At
least a few of these will be on Exam 1.)&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Define $A \subset B$ (strict subset).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prove $A \cup B \equiv B \cup A$.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prove $A - B = \emptyset \iff A \subseteq B$.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Prove $A = B \iff (\forall a \in A \ldotp a \in B) \wedge (\forall b \in B \ldotp b \in A).$&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h2 id=&#34;danny-lewin&#34;&gt;Danny Lewin&lt;/h2&gt;

&lt;p&gt;See the web version for links to articles on Danny Lewin.&lt;/p&gt;

&lt;p&gt;\begin{quote}
{\em In true Danny form, he fought back against the terrorists in an effort to defend the stewardesses and the cockpit. To this day, those of us who knew him well can’t figure out how only five terrorists managed to overpower him. During his short life, Danny made extraordinary contributions to the internet and to computer science through his work in algorithms and complexity theory. The impact of his work will be felt throughout the hi-tech industry for many years to come.} (from Tom Leigthon&amp;rsquo;s \hyperlink{&lt;a href=&#34;http://www.egr.unlv.edu/~bein/SIGACT/lewin.html}{remarks&#34;&gt;http://www.egr.unlv.edu/~bein/SIGACT/lewin.html}{remarks&lt;/a&gt; to commemorate naming of the STOC Best Student Paper Award in honor of Daniel Lewin}, 19 May 2002.
\end{quote}&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Problem Set 1 Comments</title>
      <link>https://uvacs2102.github.io/ps1comments/</link>
      <pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/ps1comments/</guid>
      <description>&lt;p&gt;The solutions and comments for PS1 are now posted in collab: &lt;a href=&#34;https://collab.itc.virginia.edu/access/content/group/e0b17949-c94c-466b-835a-196381f3f911/ps1solutions.pdf&#34;&gt;PDF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The grades will be released soon.  Sorry it took so long to get the
grading and solutions done for PS1.  We are sorting out how to manage
grading using collab and figuring a better way to manage this, and
getting tablets to make it easier to write on your submitted PDFs
(instead of typing notes, as was done for PS1).  I hope this will go
more smoothly for PS2, and be fully worked out for PS3 and later. Our
goal (which I think is reasonable for you to expect) is to always return
assignments within a week of when they are due.&lt;/p&gt;

&lt;p&gt;The way problem sets are graded in this class is probably different from
what most of you are accustomed to.  The purpose of the problem sets is
primarily for &lt;em&gt;learning&lt;/em&gt; and not for &lt;em&gt;grading&lt;/em&gt;, so the grading system I
use is designed with the goals of providing useful feedback to you, as
well as giving us a way to see how the class is going and if students
are on track.  This means instead of giving detailed point scores for
every problem and grading in a way that emphasizes losing points by
making mistakes, the problem sets are graded in a way meant to capture
how well students are understanding the material.&lt;/p&gt;

&lt;p&gt;Collab requires specifying a &lt;em&gt;maximum&lt;/em&gt; score for each assignment, but
there is no real maximum score, and you should not view the scores as
being &amp;ldquo;&lt;em&gt;n&lt;/em&gt; out of &lt;em&gt;m&lt;/em&gt;&amp;rdquo; where there is some maximum score and you are losing
points if you end up below that score.&lt;/p&gt;

&lt;p&gt;The meaning of the grades for PS1 is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Real problems - only attempted a few problems, and nothing that shows any understanding.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Substantial problems - attempted a few of the problems, but didn&amp;rsquo;t show any real understanding of many concepts.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fundamental problems understanding key concepts; not able to complete
reasonable answers for most questions.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Several fundamentally incorrect answers, or fundamental problems
understanding important concepts for this assignment.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Nearly all answers correct, but justifications not as strong as
desired.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;All answers acceptable.  (This is the &amp;ldquo;expected&amp;rdquo; score for problem
sets.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;All answers essentially correct, with at least one especially good answer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;All answers well done, and more than one especially good answer.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Your answers broke new ground in computer science. (Not used for PS1)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You solved an important open problem! (Not expected to be used in cs2102)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You deserve a Turing award! (in theory, there is no upper bound on the grading, but I do not expect to have occassion to use grades higher than 11)&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Getting the &amp;ldquo;expected&amp;rdquo; code (6 for PS1) on assignments means you are
well on track to getting an A in the class (this is the &amp;ldquo;expected&amp;rdquo; grade
for everyone).  You&amp;rsquo;ll need to do well on the exams, also, of course.&lt;/p&gt;

&lt;p&gt;If your score on PS1 is below 6, you should have a good idea from the
comments and from reading the solutions, what you need to improve on to
do better on future assignments.&lt;/p&gt;

&lt;p&gt;If you notice a significant error in any of the provided solutions
(where &amp;ldquo;significant&amp;rdquo; is at my discretion, but generally means something
more than an obvious typo), you can earn bonus points by reporting it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Survey Questions (Part 2)</title>
      <link>https://uvacs2102.github.io/surveyquestions2/</link>
      <pubDate>Sat, 10 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://uvacs2102.github.io/surveyquestions2/</guid>
      <description>&lt;p&gt;Here are my (in progress) responses to more questions submitted in the
registration surveys (see &lt;a href=&#34;https://uvacs2102.github.io/surveyquestions&#34;&gt;Part 1&lt;/a&gt; for the first set
of responses).  Sorry its taking a long time to answer these questions,
but there are lots of great questions submitted, and I will eventually
get to them all.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
How to get better
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
Practice! (This applies to pretty much everything).  But, its important
to practice in a way that maximimizes benefit and avoids getting stuck
in local maxima.  The best kind of practice involves honest and direct
feedback, and interaction with people at both levels above and levels
below yourself.  We hope the problem sets in this class will provide
plenty of opportunity for effective practice.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
The syllabus said that students who do exceptionally well will be offered positions in your research group. I am interested in encryption research and I was wondering what I would have to do to be considered for a position in your research group.
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
Excellent!  Thanks for reading to the end of the syllabus.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m willing to consider anyone who expresses interest for a summer
position in my research group, but want to try and have a good
expectation that it will be a positive and worthwhile experience for
both of us before offering a position.  The main things I want to see
are &lt;em&gt;curiosity&lt;/em&gt; and &lt;em&gt;initiative&lt;/em&gt;.  Beyond that, it does help to show
that you can do well on the content in the class, but it is not
necessary to be the best student or to do consistently well.  Much more
valuable to do one impressive thing (which could be something in the
class like solving a challenge problem, or something you&amp;rsquo;ve done on your
own, like building an interesting mobile app or writing a blog, etc.).
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
I would like to learn everything I would need to know to be able to build big programs.
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
This class is more relevant for building &lt;em&gt;small&lt;/em&gt; programs that do a lot,
than for building &lt;em&gt;big&lt;/em&gt; programs.&lt;/p&gt;

&lt;p&gt;The main challenge in building big programs is managing complexity and
the best tool for managing complexity is to define clean and limited
interfaces between components.  This class might help some for that, at
least in terms of the underlying skills, becuase it should improve your
ability to think clearly about precise definitions and to strive for
minimal requirements.&lt;/p&gt;

&lt;p&gt;If you want to learn how to build big programs successfully the best
thing to do is to actually try building progressively bigger programs,
and to join and contribute to open source projects where you&amp;rsquo;ll get
mentoring from people with experience building (and maintaining, which
is often the hardest part!) big programs.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
I love interesting classes, but I also get really stressed about
grades. They don&amp;rsquo;t matter as much as I have been told they do, but my
mind is conditioned to value them. I just hope this class will be more
interesting than stressful! The article we just had to read definitely
fell into interesting and I would have enjoyed that on my own.
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
When you were in high school, you were probably told that grades were
essential to getting into a good college, and you followed this advice
well and were smart enough to do well, that&amp;rsquo;s how you ended up at UVA.&lt;/p&gt;

&lt;p&gt;In college, grades have much less significance.  There is,
unfortunately, one exception to that which is getting into the CS
majors.  I hope this will change, and also encourage students to not
accept being turned away from their desired major without a fight, but
for now the unfortunate reality is that slots in the CS majors have been
capped, and admissions are decided nearly entirely based on arbitrary
GPA cut-offs.&lt;/p&gt;

&lt;p&gt;Otherwise, there is very little that depends on your college grades (as
long as they are respectable enough that you don&amp;rsquo;t run into trouble with
academic probation or anything like that).&lt;/p&gt;

&lt;p&gt;If you want to go to graduate school (in computing, at least) after
college, it is a little better to have great grades than to have
mediocre grades (although perfect or near-perfect grades will probably
count against you), but far more important to have an impressive
accomplishment and reference letters.  Being a significant author on a
research paper is the most important determiner in getting into the best
PhD programs, and having letters from known researchers who can provide
a lot of detail about interesting and impressive things you have done is
the next most important thing.  Most reviewers of PhD applications won&amp;rsquo;t
even look at grades, or GPAs, except to possible check grades in a few
key courses, and if the reason for getting poor grades in some less
important classes is that you were more focused on doing some exciting
research, so much the better!&lt;/p&gt;

&lt;p&gt;If you want a software development job in industry, there are some
(mostly big, old) companies that will have GPA cut-offs in their hiring
searches, but generally the more interesting and worthwhile the company
you are seeking to work for, the less they care about grades and the
more they want to see evidence of what you can accomplish on your own
initiative.  Contributing significantly to an open source project,
building your own interesting web/mobile app, initiating and leading a
student club, providing a technical and leadership contribution to a
service organization, etc., are all much more impressive and meaningful
evidence that you would be a valuable employee for most companies and
any number of As in your classes.&lt;/p&gt;

&lt;p&gt;As for what we can do in cs2102, I do try to make things less stressful
for students, but sometimes things intended to reduce stress are
misinterpreted and actually increase student stress.  I believe being
somewhat vague about what is expected and how grading is done is highly
beneficial for learning.  My favorite quote about this is from John
Stigloe (who was a professor at Harvard, but it applies equally to UVA
students):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This generation of students got into Harvard by doing exactly and precisely what teacher wants. If teacher is vague about what he wants, they work a lot harder to figure out what they want and whether or not it is good. The vaguer the directions, the more likely the opportunity for serendipity to happen. It drives them nuts!&lt;/em&gt; (Harvard Professor John Stilgoe on &amp;ldquo;60 Minutes&amp;rdquo;, 4 January 2004)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That said, I understand that uncertainty is one of the main things that
causes stress for students (and I don&amp;rsquo;t really want to drive students
nuts!).  I hope students will view the vagueness in my courses as
meaning there are many and varried opportunities to show that you
deserve an A in the class, and that I can be trusted to treat everyone
fairly.&lt;/p&gt;

&lt;p&gt;The other main cause of grading stress, I believe, is students fearing
that even though they understand the material well and are putting in a
solid effort, that they are at risk of getting less-than-desired grade
because of making little mistakes.  Grading done where each question is
&amp;ldquo;out of&amp;rdquo; some number of points, and there are various ways to lose
specific numbers of points for making mistakes, and the grade is
computed as the total of all the points over all the questions,
exaccerbates this stress in two ways.&lt;/p&gt;

&lt;p&gt;First, it means students are mostly focused on getting to the threshold
&amp;ldquo;full credit&amp;rdquo; answer and fearful of anything that might cause point
deductions.  This stifles creativity and ambition.&lt;/p&gt;

&lt;p&gt;Second, over the course of a set of assignments, it means it is nearly
impossible to recover from one misstep.  If 90% is needed for an &amp;ldquo;A&amp;rdquo;
grade, it takes 3 grades of 95 to make up for one 75, and 5 grades of 95
to make up for one 65.  With the grading system I use, one great
assignment (or one successful challenge solution), is enough to make up
for several poor assignments.  I&amp;rsquo;m looking for evidence that students
have understood important concepts and shown that they can use them
effectively, not for signs of occasional slip-ups.&lt;/p&gt;

&lt;p&gt;I hope students find the grading systems I use to be less stressful, and
more conducive to ambition and creativity.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
People tell me if discrete doesn&amp;rsquo;t &amp;ldquo;click&amp;rdquo; for me I will not do well in the class. What can I do to make it &amp;ldquo;click&amp;rdquo;?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
I don&amp;rsquo;t think anything worthwhile for you to learn &amp;ldquo;clicks&amp;rdquo; right away.
Usually when something &amp;ldquo;clicks&amp;rdquo;, it is because of lots of struggling and
effort beforehand, setting up your mind for the &amp;ldquo;click&amp;rdquo; to happen.&lt;/p&gt;

&lt;p&gt;So, the main thing I would say is don&amp;rsquo;t be distressed if you see other
people getting things more quickly than you do.  Its probably not
because they have some magic discrete math gene that enables them to
understand things that you are lacking.  I&amp;rsquo;m pretty sure no such gene
exists.  Instead, when someone learns something quickly it is probably
because they had a lot of previous experience that gave them the context
necessary for the new concept to make sense.&lt;/p&gt;

&lt;p&gt;When things seem overly hard to learn, instead of getting frustrated,
your goal should be to figure out what context you are missing that is
making it hard to learn.  Rather than getting stuck on the new concept,
go back to the previous ones that it is building on and make sure you
really understand them (a great way to do this is to try and explain
them to someone else who might be confused on them).&lt;/p&gt;

&lt;p&gt;Don&amp;rsquo;t just assume you understand things because you can read solutions
to problems and they seem to make sense, make sure you do by working out
the problems yourself and then comparing them to others&amp;rsquo; solutions.  The
collaboration policy for the assignments in this class is intended to
encourage this, and I hope students will take advantage of it, and use
opportunities to work with others as ways to improve each other&amp;rsquo;s
understanding.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
Will this course be focused solely on mathematical proofs, or a broad range of proofs (i.e. Evaluating conspiracy claims)?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
We will concentrate on proofs about mathematical propositions, with a
focus on ones that are (at least loosely) relevant to computing.  The
nice thing about mathematical propositions and proofs is that they can
be stated precisely and umambiguously, and the methods of reasoning are
well established and universal.  Many of the reasoning methods we&amp;rsquo;ll see
for mathematical proofs are also relevant to discussions about things in
the physical world, but the &amp;ldquo;rules of evidence&amp;rdquo; and methods of reasoning
are much less clear and much in dispute (e.g., outright lying seems to
have become pretty much acceptable in our current political discourse,
but assuming any falsehood would completely invalidate any mathematical
proof).  I would encourage everyone to take a philosophy class to look
more deeply at how formal reasoning can be used to understand things in
the real world, but for this class we will mostly stay in the safe world
of mathematical abstractions.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
As a double major in Math and CS, I am also taking the Transition to Higher Mathematics course this semester. Do you believe these proof-based courses would work in conjunction?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
I would expect so!  I&amp;rsquo;m sure there will be lots of connections between
the two classes, and would encourage you to share any extra insights you
get with me and the class.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
whats your middle name
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
I provide that only on a &amp;ldquo;need-to-know&amp;rdquo; basis.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
How much of a computer/computing/etc. background do I need to succeed in this class?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
You are expected to have at least some programming experience (enough to
understand and write simple programs), and I also assume everyone in the
modern world has had a lot of experience using complex computing
systems.  I think some parts of the class will probably have more
relevance to people with more programming experience, and I&amp;rsquo;ll try to
relate some of the abstract concepts in the class to things that some
students may have encountered in programming (but others will not have
yet seen), but it is not necessary to have substantial computing
background to do well in this class.&lt;/p&gt;

&lt;p&gt;The only official prerequisite is cs11xx or equivalent, so if it seems
like anything is ever unfairly assuming more CS background than you
should expect to have by satisfying that prerequisite, you should make
sure to let me know. &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
Is there any actual coding involved in the course?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
Its possible there will be some problems that involve programming, but
it will not be a major part of the course.  There will be challenge and
optional problems that might be infeasible to solve without programming.&lt;/p&gt;

&lt;p&gt;It will definitely be possible to earn an A in the class without doing
any programming.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
I always enjoy hearing about the instructor&amp;rsquo;s life/achievements. I feel like it makes them seem more human ,and also makes me feel excited to learn under such a distinguished person in their field.
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;
Wow, that&amp;rsquo;s flattering!  (I&amp;rsquo;m not sure if it is more flattering to seem
human, or to be a &amp;ldquo;distinguished person&amp;rdquo;, but either way, I appreciate
the question.)&lt;/p&gt;

&lt;p&gt;As for my life, it is mostly focused around my children (a four-year old
daughter, and 17-month old son).  Since having children, I view any
professional accomplishment as inconsequential compared to my hopes of
being a good parent and raising decent and fulfilled children.&lt;/p&gt;

&lt;p&gt;As for my achievements and experiences in computing and teaching, the
ones I think are most significant are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;When I was an undergraduate at MIT, I was an undergraduate researcher
in Marc Raibert&amp;rsquo;s robotics lab where I worked on making
physically-realistic animations of kangaroo-like creatures.  One day
Prof. Raibert came into the lab and told us we should make the
creatures look like dinosaurs instead, but he couldn&amp;rsquo;t explain why.  A
few weeks later he came back from a meeting with people in Hollywood,
saying he thought he had convinced them it would be possible to make a
sufficiently realistic animated dinosaur for a movie (which turned out
to be Jurassic Park).  As an undergraduate, I also had an opportunity
to work as an intern in John Backus&amp;rsquo; group at IBM Almaden, on a
functional programming language.  John was a UVA dropout, who had gone
on to lead the Fortan project at IBM, develop what is now known as
Backus-Naur Form, and then lead a programming language research group
at IBM Almaden.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The main research I did as a graduate student at MIT (which didn&amp;rsquo;t end
up actually as part of my PhD dissertation) was to develop a tool for
lightweight static checking, that would take advantage of annotations
added to C programs to be able to warn programmers about likely
programming errors.  The tool I mostly built ended up being quite
widely used, and included in many Linux distributions.  (The work was
mostly done in 1993-1996, with some more doing after I came to UVA in
1999-2001, but I still get bug reports form people using &lt;a href=&#34;http://www.splint.org/&#34;&gt;the
tool&lt;/a&gt;.  Some of the ideas we had for checking
memory use in C programs are now being used, in farily similar form,
in the &lt;a href=&#34;https://www.rust-lang.org/en-US/&#34;&gt;Rust programming language&lt;/a&gt;,
although I have no direct involvement in this.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;One of my first goals after starting at UVA (where I joined as a
professor in 1999) was to develop a new introductory computing course
targeted for College of Arts and Sciences students and intended for
people who were only expected to take one computing course.  This
started as a &lt;a href=&#34;http://www.cs.virginia.edu/~evans/pubs/teachingfellowship.pdf&#34;&gt;University Teaching Fellowship
Proposal&lt;/a&gt;,
and the first course was offered as &lt;a href=&#34;http://www.cs.virginia.edu/~evans/cs200-spring2002/&#34;&gt;cs200: &lt;em&gt;Computer Science from Ada
and Euclid to Quantum Computing and the World Wide
Web&lt;/em&gt;&lt;/a&gt; in 2002.
Initially, there were about 20 students in the class, but more than
half of them dropped out after the first problem set which was not
well designed.  But, the remaining 9 students stuck with the class and
over the years it developed.  Since some students who took it wanted
to continue into other computing courses but were not allowed to in
the curriculum we had then, I created a follow-on course (initially
offered as &lt;a href=&#34;http://www.cs.virginia.edu/~evans/cs201j-fall2002/&#34;&gt;cs201j: Engineering
Software&lt;/a&gt;, and
with &lt;a href=&#34;http://www.cs.virginia.edu/~evans/pictures/snakes/&#34;&gt;Snakes!&lt;/a&gt;),
which could lead into our other CS courses (it counted as what is now
cs2110, and satisfied the prerequisite for cs2150).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Based on the success of these courses and the quality of students we
were finding in the College, I pushed for creating a CS major that was
open to CLAS students.  In fall 2005, I was given support from my
Department Chair to lead an effort to create a CS degree for the
College, and after putting together a committee to help with this and
designing a curriculum, the Interdisciplinary Major in Comptuer
Science (BACS) degree was approved in 2006, and we graduated our first
three students in 2007.  By the time I stepped down as BACS director,
the BACS had grown to be larger than any other major offered by the
Engineering school.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I wrote an open textbook based around the cs200/cs150/cs1120 course,
&lt;a href=&#34;http://computingbook.org&#34;&gt;&lt;em&gt;Introduction to Computing: Explorations in Language, Logic, and
Machines&lt;/em&gt;&lt;/a&gt;.  Although it was not widely
adopted, it does have some eager readers and I get occasional emails
from people who have used it as a self-study book.  It also was the
main thing that led to me being recruited by an open education startup
to teach their first course.  (You can read about my experiences as
the first VP of Education for Udacity here: &lt;a href=&#34;http://blog.udacity.com/2013/02/cs101-one-year-later.html&#34;&gt;CS101: One Year
Later&lt;/a&gt;, and
my favorite article about this is &lt;a href=&#34;http://www.prospectmagazine.co.uk/features/online-universities-udacity-grand-challenge-david-stavens-dave-evans&#34;&gt;&lt;em&gt;Professors without borders: Will
online learning spell the end of
universities?&lt;/em&gt;&lt;/a&gt;, not just because it somehow claims I have &amp;ldquo;Monty Python humour&amp;rdquo;.)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I&amp;rsquo;ve had a chance to teach many &lt;a href=&#34;http://www.cs.virginia.edu/~evans/students/&#34;&gt;remarkable
students&lt;/a&gt; who have gone on
to do amazing and wonderful things.  Although its always hard to know
how much impact one actually has, one of the joys and privledges of
being a professor is to follow the careers of your students and to
feel like you can claim some credit for them.  Some of the students
who have worked in my research group include &lt;a href=&#34;https://www.youtube.com/watch?v=29K7ldNlH6s&amp;amp;feature=youtu.be&#34;&gt;Adrienne Porter
Felt&lt;/a&gt;
(&lt;a href=&#34;https://news.virginia.edu/content/computer-science-grad-stands-watch-users-googles-popular-browser&#34;&gt;UVAToday&lt;/a&gt;
article) (who works on social network privacy and web browser security
when she was an undergraduate in my research group, and now leads the
Chrome security team at Google), &lt;a href=&#34;http://homes.soic.indiana.edu/yh33/&#34;&gt;Yan
Huang&lt;/a&gt; (who worked on secure
computation for his PhD in my group, and is now a professor at Indiana
University), &lt;a href=&#34;http://www.cbsnews.com/news/60-minutes-hacking-your-phone/&#34;&gt;Karsten
Nohl&lt;/a&gt; (who
worked on RFID security for his PhD in my group, and went on to found
&lt;a href=&#34;https://srlabs.de/&#34;&gt;Security Research Labs&lt;/a&gt; and expose high profile
security vulnerabilities in &lt;a href=&#34;https://www.jeffersonswheel.org/2016/tracking-congressional-phones&#34;&gt;phone
systems&lt;/a&gt;,
&lt;a href=&#34;https://www.jeffersonswheel.org/2015/latest-from-karsten-nohl-pos-security&#34;&gt;payment
systems&lt;/a&gt;,
&lt;a href=&#34;https://www.jeffersonswheel.org/2014/updates-from-karstens-badusb&#34;&gt;USB&lt;/a&gt;,
and &lt;a href=&#34;https://www.jeffersonswheel.org/2011/karstens-gsm-studies&#34;&gt;GSM&lt;/a&gt;),
&lt;a href=&#34;http://www2.eecs.utk.edu/people/faculty/pauln&#34;&gt;Nate Paul&lt;/a&gt; (who work
on malware security for his PhD in my group, and has gone on to do
work on medical devices and embedded security at Oak Ridge and
University of Tennessee),
and &lt;a href=&#34;http://www.cs.virginia.edu/~evans/students/&#34;&gt;many others&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I&amp;rsquo;ve led or been involved in research projects that have come up with
some cool ideas, &lt;a href=&#34;https://scholar.google.com/citations?user=DsR4PucAAAAJ&amp;amp;hl=en&#34;&gt;a few of which have led to lots of other research as
well as use in
industry&lt;/a&gt;.
The most significant are our work on making &lt;a href=&#34;http://www.mightbeevil.org/&#34;&gt;secure multi-party
computation practical&lt;/a&gt;, improving
software security (e.g.,
&lt;a href=&#34;http://scriptinspector.org/&#34;&gt;ScriptInspector&lt;/a&gt;,
&lt;a href=&#34;http://www.cs.virginia.edu/perracotta/&#34;&gt;Perracotta&lt;/a&gt;,
&lt;a href=&#34;http://www.cs.virginia.edu/~evans/pubs/infosec05.html&#34;&gt;PHPrevent&lt;/a&gt;,
and &lt;a href=&#34;http://www.splint.org&#34;&gt;Split&lt;/a&gt;), and &lt;a href=&#34;http://www.cs.virginia.edu/~evans/mcl/&#34;&gt;mobile
networking&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I&amp;rsquo;ve been involved in a few start-up companies, one as a co-founder
(when I was a grad student), one as an early employee (with Udacity,
growing from 5 to ~50 people), and many as an advisor.  I&amp;rsquo;ve learned
from these experiences (mostly that academia is much more pleasant
than industry!), but also have lots of opportunites to work with great
people and see different aspects of companies at various stages.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I&amp;rsquo;ve written a &lt;a href=&#34;http://www.dori-mic.org/&#34;&gt;baby book on theoretical computer
science&lt;/a&gt;, make some &lt;a href=&#34;http://www.cs.virginia.edu/~evans/videos/#fun&#34;&gt;fun
videos&lt;/a&gt;, and &lt;a href=&#34;http://www.cs.virginia.edu/~evans/pictures/2009-02-19-ofa/&#34;&gt;received
an award from Tim
Kaine&lt;/a&gt; (back when
he was a lowly governor).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope that helps!  Thanks for asking.
   &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;question&#34;&gt;
who&amp;rsquo;s your favourite scientist?
   &lt;/div&gt;
   &lt;div class=&#34;answer&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://plus.google.com/+DavidEvans/posts/7QRogdYbBQ3&#34;&gt;Grace Hopper&lt;/a&gt;
(really enjoyed Kurt Beyer&amp;rsquo;s
&lt;a href=&#34;https://www.amazon.com/Invention-Information-Lemelson-Studies-Innovation/dp/0262517264/ref=sr_1_1?ie=UTF8&amp;amp;qid=1473559448&amp;amp;sr=8-1&amp;amp;keywords=grace+hopper&#34;&gt;biography&lt;/a&gt;.
I would also mention Claude Shannon, Alan Turing, and Richard Feynman as
runner-ups.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>